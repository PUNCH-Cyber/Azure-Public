{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "customerName": {
            "type": "string",
            "metadata": {
                "description": "Name for the Log Analytics workspace"
            }
        }
    },
    "variables": {
        "quoatSetting": {
            "dailyQuotaGb": "[variables('dailyQuota')]"
        },
        "pricingTier": "PerGB2018",
        "dailyQuota": 0,
        "dataRetention": 90,
        "securityCollectionTier": "Recommended",
        "enableDataConnectorsKind": [
            "AzureActivity",
            "AzureSecurityCenter",
            "AzureActiveDirectory"
            ],
        "enableFusionAlert": false,
        "enableMicrosoftAlerts": false,
        "enableMLAlerts": false,
        "enableScheduledAlerts": false,
        "mcasDiscoveryLogs": false,
        "_artifactsLocation": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Tools/Sentinel-All-In-One/",
        "_artifactsLocationSasToken": "",
        "location": "[resourceGroup().location]",
        "mspRegistrationName": "[guid(variables('mspOfferName'))]",
        "mspAssignmentName": "[guid(variables('mspOfferName'))]",
        "authorizations": [
            { 
                "principal id": "8b9d8527-1ce0-492a-a422-c31a8c3fbbd0",
                "roleDefinitionId": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
                "principalIdDisplayName": "PIM_Group" 
            }, 
            { 
                "principal id": "8b9d8527-1ce0-492a-a422-c31a8c3fbbd0",
                "roleDefinitionId": "91c1777a-f3dc-4fae-b103-61d183457e46",
                "principalIdDisplayName": "PIM_Group" 
            }   
        ],
        "mspOfferName":  "MSSP TEST NAMING CONVENTION",
        "mspOfferDescription": "DESCIPTION OF SERVICES",
        "managedByTenantId": "f7ca9621-6ba3-4d52-a241-e0ed3ea6a78a"
    },
    "resources": [
        {
            "name": "[parameters('customerName')]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2015-11-01-preview",
            "location": "[variables('location')]",
            "properties": {
                "retentionInDays": "[variables('dataRetention')]",
                "workspaceCapping": "[if(equals(variables('dailyQuota'),0), json('null'), variables('quoatSetting'))]",
                "sku": {
                    "name": "[variables('pricingTier')]"
                }
            }
        },
        {
            "name": "[concat('SecurityInsights','(', parameters('customerName'),')')]",
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('customerName'))]"
            ],
            "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('customerName'))]"
            },
            "plan": {
                "name": "[concat('SecurityInsights','(', parameters('customerName'),')')]",
                "product": "OMSGallery/SecurityInsights",
                "publisher": "Microsoft",
                "promotionCode": ""
            }
        },
        {
            "condition": "[not(empty(variables('enableDataConnectorsKind')))]",
            "name": "enableDataConnectorsKind",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "dependsOn": [
                "[resourceId('Microsoft.OperationsManagement/solutions/', concat('SecurityInsights','(', parameters('customerName'),')'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('_artifactsLocation'), concat('ARMTemplates/LinkedTemplates/dataConnectors.json', variables('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "dataConnectorsKind": {
                        "value": "[variables('enableDataConnectorsKind')]"
                    },
                    "workspaceName": {
                        "value": "[parameters('customerName')]"
                    },
                    "tenantId": {
                        "value": "[subscription().tenantId]"
                    },
                    "subscriptionId": {
                        "value": "[subscription().subscriptionId]"
                    },
                    "securityCollectionTier": {
                        "value": "[variables('securityCollectionTier')]"
                    },
                    "mcasDiscoveryLogs": {
                        "value": "[variables('mcasDiscoveryLogs')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    }
                }
            }
        },
        {
            "condition": "[or(variables('enableFusionAlert'),variables('enableMicrosoftAlerts'),variables('enableMLAlerts'))]",
            "name": "enableAlerts",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "dependsOn": [
                "[resourceId('Microsoft.OperationsManagement/solutions/', concat('SecurityInsights','(', parameters('customerName'),')'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('_artifactsLocation'), concat('ARMTemplates/LinkedTemplates/alertRules.json', variables('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "dataConnectorsKind": {
                        "value": "[variables('enableDataConnectorsKind')]"
                    },
                    "workspaceName": {
                        "value": "[parameters('customerName')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "enableFusionAlert":{
                        "value": "[variables('enableFusionAlert')]"
                    },
                    "enableMicrosoftAlerts":{
                        "value": "[variables('enableMicrosoftAlerts')]"
                    },
                    "enableMLAlerts":{
                        "value": "[variables('enableMLAlerts')]"
                    }
                }
            }
        },
        {
            "condition": "[variables('enableScheduledAlerts')]",
            "name": "enableScheduledAlerts",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments/', 'enableAlerts')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('_artifactsLocation'), concat('ARMTemplates/LinkedTemplates/scheduledAlerts.json', variables('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "workspaceName": {
                        "value": "[parameters('customerName')]"
                    },
                    "dataConnectorsList":{
                        "value": "[replace(replace(string(variables('enableDataConnectorsKind')),'\"',''),'[','')]"
                    }
                }
            }
        },
        {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-10-01",
        "name": "lighthouse",
        "properties": {
            "mode": "Incremental",
            "template": {
                "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "resources": [
                    {
                        "type": "Microsoft.ManagedServices/registrationDefinitions",
                        "apiVersion": "2019-06-01",
                        "name": "[variables('mspRegistrationName')]",
                        "properties": {
                            "registrationDefinitionName": "[variables('mspOfferName')]",
                            "description": "[variables('mspOfferDescription')]",
                            "managedByTenantId": "[variables('managedByTenantId')]",
                            "authorizations": "[variables('authorizations')]"
                        }
                    },
                    {
                        "type": "Microsoft.ManagedServices/registrationAssignments",
                        "apiVersion": "2019-06-01",
                        "name": "[variables('mspAssignmentName')]",
                        "dependsOn": [
                            "[resourceId('Microsoft.ManagedServices/registrationDefinitions/', variables('mspRegistrationName'))]"
                        ],
                        "properties": {
                            "registrationDefinitionId": "[resourceId('Microsoft.ManagedServices/registrationDefinitions/', variables('mspRegistrationName'))]"
                        }
                    }
                ]
            }
        }
    }
    ],
    "outputs": {
        "customerName": {
            "type": "string",
            "value": "[parameters('customerName')]"
        },
        "workspaceIdOutput": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces/', parameters('customerName')), '2015-11-01-preview').customerId]"
        },
        "workspaceKeyOutput": {
            "type": "string",
            "value": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces/', parameters('customerName')), '2015-11-01-preview').primarySharedKey]"
        },
        "dataConnectorsList": {
            "type": "string",
            "value": "[replace(replace(string(variables('enableDataConnectorsKind')),'\"',''),'[','')]"
        }
    }
}
