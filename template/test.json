{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "customerName": {
            "type": "string",
            "metadata": {
                "description":"MSSP - Customer Name"
            }
        },
        "pricingTier": {
            "type": "string",
            "metadata": {
                "description": "Pricing tier: pergb2018 or legacy tiers (Free, Standalone, PerNode, Standard or Premium) which are not available to all customers."
            },
            "allowedValues": [
                "PerGB2018",
                "Free",
                "Standalone",
                "PerNode",
                "Standard",
                "Premium"
            ],
            "defaultValue": "PerGB2018"
        },
        "dailyIngestLimit": {
            "type": "int",
            "metadata": {
                "description": "Daily ingestion limit in GBs."
                },
            "defaultValue": 0
        },
        "dataRetention": {
            "type": "int",
            "defaultValue": 30,
            "minValue": 7,
            "maxValue": 730,
            "metadata": {
                "description": "Number of days of retention. The legacy Free pricing tier can only have 7 days. Default retention is 30 days."
            }
        },
        "mspOfferName": {
            "type": "string",
            "metadata": {
                "description": "MSSP - Test NAME HERE"
            },
            "defaultValue": "MSSP TEST NAMING CONVENTION"
        },
        "mspOfferDescription": {
            "type": "string",
            "metadata": {
                "description": "MSSP Offering by PUNCH Cyber Analytics Group"
            },
            "defaultValue": "DESCIPTION OF SERVICES"
        },
        "managedByTenantId": {
            "type": "string",
            "metadata": {
                "description": "Managed by PUNCH Cyber Analytics Group"
            },
            "defaultValue": "f7ca9621-6ba3-4d52-a241-e0ed3ea6a78a"
        }

    },
    "variables": {
        "ingestLimitSetting": {
            "dailyLimitGB":"[parameters('dailyIngestLimit')]"
        },
        "mspRegistrationName": "[guid(parameters('mspOfferName'))]",
        "mspAssignmentName": "[guid(parameters('mspOfferName'))]",
        "authorizations": {
            "type": "array",
            "metadata": {
                "description": "List of authorizations granted to the provider"
            },
            "defaultValue": [
                { 
                    "principal id": "8b9d8527-1ce0-492a-a422-c31a8c3fbbd0",
                    "roleDefinitionId": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
                    "principalIdDisplayName": "PIM_Group" 
                }, 
                { 
                    "principal id": "8b9d8527-1ce0-492a-a422-c31a8c3fbbd0",
                    "roleDefinitionId": "91c1777a-f3dc-4fae-b103-61d183457e46",
                    "principalIdDisplayName": "PIM_Group" 
                }   
            ]
        },
        "securityCollectionTier": {
            "type": "string",
            "defaultValue": "Recommended",
            "allowedValues": [
                "All",
                "Recommended",
                "Minimal",
                "None"
            ],
            "metadata": {
                "description": "Tier for gathering Windows Security Events."
            }
        },
        "enableDataConnectorsKind": {
            "type": "array",
            "metadata": {
                "description": "The kind of data connectors that can be deployed via ARM templates are the following: [\"AzureActivityLog\",\"SecurityInsightsSecurityEventCollectionConfiguration\",\"WindowsFirewall\",\"DnsAnalytics\"], Reference: https://docs.microsoft.com/azure/templates/microsoft.operationalinsights/2020-03-01-preview/workspaces/datasources#microsoftoperationalinsightsworkspacesdatasources-object"
            },
            "defaultValue": [
                {
                    "label": "Azure AD Identity Protection",
                    "value": "AzureActiveDirectory"
                },
                {
                    "label": "Azure Security Center",
                    "value": "AzureSecurityCenter"
                },
                {
                    "label": "Azure Activity",
                    "value": "AzureActivity"
                },
                {
                    "label": "Security Events",
                    "value": "SecurityEvents"
                },
                {
                    "label": "Linux Syslog",
                    "value": "Syslog"
                }
            ]
        },
        "enableFusionAlert": {
            "type": "bool",
            "metadata": {
                "description": "Enable Fusion analytics rules"
            },
            "defaultValue": false
        },
        "enableMicrosoftAlerts": {
            "type": "bool",
            "metadata": {
                "description": "Enable Microsoft analytics rules"
            },
            "defaultValue": false
        },
        "enableMLAlerts": {
            "type": "bool",
            "metadata": {
                "description": "Enable ML Behavior Analytics rules"
            },
            "defaultValue": false
        },
        "enableScheduledAlerts": {
            "type": "bool",
            "metadata": {
                "description": "Enable Scheduled analytics rules"
            },
            "defaultValue": false
        },
        "mcasDiscoveryLogs": {
            "type": "bool",
            "metadata": {
                "description": "Enable MCAS Discovery Logs"
            },
            "defaultValue": false
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The location of resources"
            },
            "defaultValue": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Tools/Sentinel-All-In-One/"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "Auto-generated token to access _artifactsLocation. Leave it blank unless you need to provide your own value."
            },
            "defaultValue": ""
        }
    },
    "resources": [
        {
            "name": "[parameters('customerName')]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2015-11-01-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "retentionInDays": "[parameters('dataRetention')]",
                "workspaceCapping": "[if(equals(parameters('dailyIngestLimit'),0), json('null'), variables('ingestLimitSetting'))]",
                "sku": {
                    "name": "[parameters('pricingTier')]"
                }
            }
        },
        {
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "name": "[concat('SecurityInsights','(',parameters('customerName'),')')]",
            "location": "[resourceGroup().location]",
            "plan": {
                "name": "[concat('SecurityInsights','(',parameters('customerName'),')')]",
                "product": "OMSGallery/SecurityInsights",
                "publisher": "Microsoft"
            },
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/',parameters('customerName'))]"
            ],
            "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/',parameters('customerName'))]"
            }
        },
        {
            "condition": "[not(empty(variables('enableDataConnectorsKind')))]",
            "name": "enableDataConnectorsKind",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "dependsOn": [
                "[resourceId('Microsoft.OperationsManagement/solutions/', concat('SecurityInsights','(', parameters('customerName'),')'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('_artifactsLocation'), concat('ARMTemplates/LinkedTemplates/dataConnectors.json', variables('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "dataConnectorsKind": {
                        "value": "[variables('enableDataConnectorsKind')]"
                    },
                    "workspaceName": {
                        "value": "[parameters('customerName')]"
                    },
                    "tenantId": {
                        "value": "[subscription().tenantId]"
                    },
                    "subscriptionId": {
                        "value": "[subscription().subscriptionId]"
                    },
                    "securityCollectionTier": {
                        "value": "[variables('securityCollectionTier')]"
                    },
                    "mcasDiscoveryLogs": {
                        "value": "[variables('mcasDiscoveryLogs')]"
                    },
                    "location": {
                        "value": "[resourceGroup().location]"
                    }
                }
            }
        },
        {
            "condition": "[or(variables('enableFusionAlert'),variables('enableMicrosoftAlerts'),variables('enableMLAlerts'))]",
            "name": "enableAlerts",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "dependsOn": [
                "[resourceId('Microsoft.OperationsManagement/solutions/', concat('SecurityInsights','(', parameters('customerName'),')'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('_artifactsLocation'), concat('ARMTemplates/LinkedTemplates/alertRules.json', variables('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "dataConnectorsKind": {
                        "value": "[variables('enableDataConnectorsKind')]"
                    },
                    "workspaceName": {
                        "value": "[parameters('customerName')]"
                    },
                    "location": {
                        "value": "[resourceGroup().location]"
                    },
                    "enableFusionAlert":{
                        "value": "[variables('enableFusionAlert')]"
                    },
                    "enableMicrosoftAlerts":{
                        "value": "[variables('enableMicrosoftAlerts')]"
                    },
                    "enableMLAlerts":{
                        "value": "[variables('enableMLAlerts')]"
                    }
                }
            }
        },
        {
            "condition": "[variables('enableScheduledAlerts')]",
            "name": "enableScheduledAlerts",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-05-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments/', 'enableAlerts')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(variables('_artifactsLocation'), concat('ARMTemplates/LinkedTemplates/scheduledAlerts.json', variables('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "workspaceName": {
                        "value": "[parameters('customerName')]"
                    },
                    "dataConnectorsList":{
                        "value": "[replace(replace(string(variables('enableDataConnectorsKind')),'\"',''),'[','')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.ManagedServices/registrationDefinitions",
            "apiVersion": "2019-06-01",
            "name": "[variables('mspRegistrationName')]",
            "properties": {
                "registrationDefinitionName": "[parameters('mspOfferName')]",
                "description": "[parameters('mspOfferDescription')]",
                "managedByTenantId": "[parameters('managedByTenantId')]",
                "authorizations": "[variables('authorizations')]"
            }
        },
        {
            "type": "Microsoft.ManagedServices/registrationAssignments",
            "apiVersion": "2019-06-01",
            "name": "[variables('mspAssignmentName')]",
            "dependsOn": [
                "[resourceId('Microsoft.ManagedServices/registrationDefinitions/', variables('mspRegistrationName'))]"
            ],
            "properties": {
                "registrationDefinitionId": "[resourceId('Microsoft.ManagedServices/registrationDefinitions/', variables('mspRegistrationName'))]"
            }
        }
    ],
    "outputs": {
        "mspOfferName": {
            "type": "string",
            "value": "[concat('Managed by', ' ', parameters('mspOfferName'))]"
        },
        "authorizations": {
            "type": "array",
            "value": "[variables('authorizations')]"
        },
        "workspaceName": {
            "type": "string",
            "value": "[parameters('customerName')]"
        },
        "workspaceIdOutput": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces/', parameters('customerName')), '2015-11-01-preview').customerId]"
        },
        "workspaceKeyOutput": {
            "type": "string",
            "value": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces/', parameters('customerName')), '2015-11-01-preview').primarySharedKey]"
        },
        "dataConnectorsList": {
            "type": "string",
            "value": "[replace(replace(string(variables('enableDataConnectorsKind')),'\"',''),'[','')]"
        }
    }
}
